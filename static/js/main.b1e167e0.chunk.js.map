{"version":3,"sources":["lib/components/Layout.js","lib/services/VectorGenerator.js","lib/graphics/Renderer.js","lib/graphics/Builder.js","lib/errors/FileError.js","lib/Editor.js","mixin.js","lib/services/FileService.js","lib/services/IdService.js","lib/errors/ErrorHandler.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","react_default","a","createElement","className","style","flexDirection","children","VectorGenerator","_this","this","scaler","arguments","length","undefined","coords","Object","classCallCheck","latLonToXY","mapWidth","mapHeight","generateVector","y","coordinates","x","xOffset","z","zOffset","v","OrbitControls","require","THREE","Builder","loadProject","project","levels","map","i","assign","forEach","data","features","j","objects","setOffsets","lat","lon","groundStart","find","name","settings","extrude","depth","processData","changeLevelColor","id","activeLevel","color","l","c","parseInt","item","material","setHex","renderObject","object","push","type3d","add3DPolygon","addBuildings","addLevels","initBuilder","container","scene","camera","getBoundingClientRect","width","height","renderer","antialias","shadowMap","enabled","setSize","appendChild","domElement","window","addEventListener","aspect","offsetWidth","updateProjectionMatrix","controls","maxPolarAngle","Math","PI","minDistance","maxDistance","addSkybox","viewLoop","requestAnimationFrame","update","render","position","setY","geometry","side","cube","add","vectorGenerator","set","lookAt","addGround","sidesMaterial","sideColor","pts","k","slice","q","scaledVector","shape","rotation","randomColor","colors","floor","random","coordinatesArray","walls","f","properties","HEIGHT","vertices","previousVertexIndex","faces","computeVertexNormals","computeFaceNormals","items","startCoords","moveTo","lineTo","textureLoader","mapImage","concat","load","anisotropy","capabilities","getMaxAnisotropy","minFilter","ground","FileError","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","Error","captureStackTrace","assertThisInitialized","Editor","componentWillMount","addObjectData","projectName","projectDescription","setState","menu","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","changeMenu","openProject","ExampleData","stop","createProject","projectId","guid","state","objectSpread","offsetCoords","DISPLAY_XY","projectData","lastMenu","renderMenu","startMenu","newModel1","newModel2","manualGeoJSON","projectMenu","addOne","editOne","editLevelTwo","addObject","_callee2","type","_this$addObjectData","_id","_o","o","_context2","t0","Config","extrudeSettings","console","log","abrupt","addGeoJSON","_callee3","e","res","_context3","readFile","sent","status","handleError","error","renderLevels","keys","projectLevels","key","_callee4","_context4","refs","getGeo3D","_callee5","_context5","getGeoJSON","_callee6","_context6","defaultColor","validateManualData","value","JSON","parse","isVenue","getVenue","_callee7","_context7","getLevels","_callee8","isLevels","_context8","r","g","b","onClick","htmlFor","accept","onChange","target","rows","ref","validateEntered","saveProjectLocal","location","reload","level","onSubmit","editLevel","backgroundColor","levelToChangeIndex","toString","padding","placeholder","_callee9","_this$state","_context9","preventDefault","editLevelList","textShadow","NAME","CATEGORY","components_Layout","d","shortName","SHORT_NAME","LEVEL_ID","indexOf","ORDINAL","baseClass","mixins","base","_baseClass","_len2","_key2","mixin","copyProps","inherits","source","getOwnPropertyNames","getOwnPropertySymbols","prop","match","defineProperty","getOwnPropertyDescriptor","prototype","Mixin","Component","FileService","sleep","ms","Promise","resolve","setTimeout","_ref","asyncToGenerator","mark","ext","file","fileExtArr","fileExt","result","files","exec","reader","readAsText","fetchData","code","message","_x","_x2","readParser","lastReadFile","isGeo3D","filename","File","stringify","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","click","removeChild","revokeObjectURL","FileReader","onload","s4","substring","App","Editor_Editor","Boolean","hostname","ReactDOM","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1e167e0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Layout = (props: any) => (\n    <div className=\"layout\" style={{flexDirection: props.flexDirection || \"row\"}}>\n        {\n            props.children\n        }\n    </div>\n);\n\nexport default Layout;\n","import type { ScaledVector } from './../types/ScaledVector';\n\nexport class VectorGenerator {\n    mapWidth: number;\n    mapHeight: number;\n    scaler: number;\n\n    xOffset: number;\n    zOffset: number;\n\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(scaler: number = 360/0.011, coords: number[]){\n        this.mapWidth = 1280;\n        this.mapHeight = 1280;\n\n        let v = this.latLonToXY(coords);\n\n        this.scaler = scaler * this.mapWidth/360;\n\n        this.xOffset = v[0]*this.scaler;\n        this.zOffset = v[1]*this.scaler;\n    }\n\n    latLonToXY = (coords: number[]): number[] => {\n        return [\n            ((this.mapWidth/360) * (180 + coords[0])),\n            ((this.mapHeight/360) * (90 - coords[1]))\n        ];\n    }\n\n    generateVector = (coords: number[], y: number = 2): ScaledVector => {\n        let coordinates = this.latLonToXY(coords);\n        return {\n            x: coordinates[0]*this.scaler - this.xOffset,\n            y: y,\n            z: coordinates[1]*this.scaler - this.zOffset\n        };\n    }\n}\n","import * as THREE from \"three\";\nimport { Scene, PerspectiveCamera, WebGLRenderer } from 'three';\nimport { VectorGenerator } from './../services/VectorGenerator';\nimport type { ScaledVector } from './../types/ScaledVector';\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default class Renderer {\n\n  scene: Scene;\n  camera: PerspectiveCamera;\n  renderer: WebGLRenderer;\n  controls: CameraControls;\n  vectorGenerator: VectorGenerator;\n  container: HTMLDivElement;\n  project: any;\n\n  initBuilder = (container: HTMLDivElement) => {\n    this.container = container;\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(90, this.container.getBoundingClientRect().width / this.container.getBoundingClientRect().height, 0.1, 10000);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.setSize(this.container.getBoundingClientRect().width, this.container.getBoundingClientRect().height);\n    this.container.appendChild(this.renderer.domElement);\n\n    window.addEventListener('resize', () => {\n      this.renderer.setSize(this.container.getBoundingClientRect().width, this.container.getBoundingClientRect().height);\n      this.camera.aspect = this.container.offsetWidth / this.container.getBoundingClientRect().height;\n      this.camera.updateProjectionMatrix();\n    });\n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.maxPolarAngle = Math.PI/2;\n    this.controls.minDistance = 10;\n    this.controls.maxDistance = 1000;\n\n    this.addSkybox();\n    this.viewLoop();\n  }\n\n  viewLoop = () => {\n    requestAnimationFrame(this.viewLoop);\n    this.update();\n    this.render();\n  }\n\n  render = () => {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  update = () => {\n    if(this.camera.position.y < 90) {\n      this.camera.position.setY(90);\n    }\n    this.controls.update();\n  }\n\n  addSkybox = () => {\n    let geometry = new THREE.BoxGeometry(10000, 10000, 10000);\n\n    let material: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial({\n        side: THREE.DoubleSide,\n        color: 0xdddddd\n    });\n\n    let cube = new THREE.Mesh(geometry, material);\n    this.scene.add(cube);\n  }\n\n  setOffsets = (coords: any) => {\n    this.project.coordinates = coords;\n\n    this.vectorGenerator = new VectorGenerator(undefined, coords);\n    this.camera.position.set(1000, 1000, 1000);\n    this.camera.lookAt(0, 0, 0);\n    this.addGround(coords);\n  }\n\n  addGround(coords: number[]) {\n    var geometry = new THREE.PlaneGeometry( 10000, 10000, 32 );\n    let textureLoader = new THREE.TextureLoader();\n\n    let mapImage = `https://api.mapbox.com/styles/v1/mapbox/streets-v10/static/${coords[0]},${coords[1]},15.0,0,0/1280x1280?access_token=pk.eyJ1IjoiY2FrbWFrZmF0aWgiLCJhIjoiY2pxcGk1d3ZrMDFwYjQ5bzFqNncyYjl2NyJ9.MtGJZ74Cu-6R7K52rFrNeQ`;\n\n    let map = textureLoader.load(mapImage);\n\n    map.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\n    map.minFilter = THREE.LinearFilter;\n\n    var material = new THREE.MeshBasicMaterial({map: map, side: THREE.DoubleSide});\n\n    let ground = new THREE.Mesh(geometry, material);\n    ground.rotation.x -= Math.PI/2;\n\n    this.scene.add(ground);\n  }\n\n  addLevels = (i: any, id: string, settings: any) => {\n    let material = new THREE.MeshBasicMaterial({\n      color: i.settings.material.color\n    });\n\n    let sidesMaterial = new THREE.MeshBasicMaterial({ color: parseInt(i.settings.material.sideColor, 16), side: THREE.DoubleSide });\n    let pts = [];\n\n    i.geometry.coordinates.forEach((j: any) => {\n      j.forEach((k: any) => {\n        k.slice(1).forEach((q: any) => {\n            let scaledVector: ScaledVector = this.vectorGenerator.generateVector(q);\n            pts.push(new THREE.Vector2(scaledVector.x, -scaledVector.z));\n        });\n      });\n    });\n\n    let shape = new THREE.Shape(pts);\n    let geometry = new THREE.ExtrudeBufferGeometry(shape, i.settings.extrude);\n\n    let item = new THREE.Mesh(geometry, [material, sidesMaterial]);\n\n    item.rotation.x += -Math.PI / 2;\n    item.position.setY(i.settings.extrude.depth);\n\n    i.item = item;\n\n    this.scene.add(item);\n  }\n\n  randomColor = () => {\n    let colors = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    return colors[Math.floor(Math.random() * colors.length)] + colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  addBuildings = (i: any, id: string, settings: any) => {\n    let material = new THREE.MeshBasicMaterial({\n      color: settings.material.color\n    });\n\n    let coordinatesArray = i.geometry.coordinates[0][0];\n    let walls = new THREE.Geometry();\n\n    coordinatesArray.forEach((f) => {\n        let coordinates = this.vectorGenerator.generateVector(f, i.properties.HEIGHT);\n        walls.vertices.push(new THREE.Vector3(coordinates.x, 0, coordinates.z));\n        walls.vertices.push(new THREE.Vector3(coordinates.x, coordinates.y*8, coordinates.z));\n    });\n\n    let previousVertexIndex = walls.vertices.length - 2;\n\n    for(let i = 0; i < walls.vertices.length; i += 2){\n        walls.faces.push(new THREE.Face3(i, i + 1, previousVertexIndex));\n        walls.faces.push(new THREE.Face3(i + 1, previousVertexIndex + 1, previousVertexIndex));\n        previousVertexIndex = i;\n    }\n\n    walls.computeVertexNormals();\n    walls.computeFaceNormals();\n    material.side = THREE.DoubleSide;\n    let items = new THREE.Mesh(walls, material);\n    items.position.setY(this.project.groundStart * 2);\n    this.scene.add(items);\n\n    this.project.objects.find((i: any) => i.id === id).item = items;\n  }\n\n  add3DPolygon = (i: any, id: string, settings: any) => {\n    let material = new THREE.MeshBasicMaterial({\n      color: parseInt(settings.material.color, 16)\n    });\n\n    let sidesMaterial = new THREE.MeshBasicMaterial({ color: parseInt(settings.material.sideColor, 16), side: THREE.DoubleSide });\n\n    let shape = new THREE.Shape();\n\n    let startCoords = this.vectorGenerator.generateVector(i.geometry.coordinates[0][0][0]);\n\n    shape.moveTo(startCoords.x, -startCoords.z);\n\n    i.geometry.coordinates.forEach((j: any) => {\n      j.forEach((k: any) => {\n        k.slice(1).forEach((q: any) => {\n            let scaledVector: ScaledVector = this.vectorGenerator.generateVector(q);\n            shape.lineTo(scaledVector.x, -scaledVector.z);\n        });\n      });\n    });\n\n    let geometry = new THREE.ExtrudeBufferGeometry(shape, settings.extrude);\n    let item = new THREE.Mesh(geometry, [material, sidesMaterial]);\n\n    item.rotation.x += -Math.PI / 2;\n    item.position.setY(settings.extrude.depth / 2);\n\n    this.project.objects.find((i: any) => i.id === id).item = item;\n\n    this.scene.add(item);\n  }\n\n}\n","import Renderer from './Renderer';\n\nexport default class Builder extends Renderer {\n\n  project: any;\n\n  loadProject = (project: any) => {\n\n    let levels = project.levels.map((i) => Object.assign([], i));\n\n    levels.forEach((i: any) => {\n      i.data = Object.assign({}, i.data, {\n        features: i.data.features.map((j: any) => Object.assign({}, j))\n      });\n    });\n\n    this.project = Object.assign({}, project, {objects: project.objects.map((i: any) => Object.assign({}, i)), levels});\n\n    this.setOffsets([this.project.coordinates.lat, this.project.coordinates.lon]);\n    this.project.groundStart = this.project.objects.find((i: any) => i.name === \"VENUE\").settings.extrude.depth / 2;\n\n    this.project.levels.forEach((i: any) => {\n      this.processData(i);\n    });\n\n    this.project.objects.forEach((i: any) => {\n      this.processData(i);\n    });\n  }\n\n  changeLevelColor = (id: string, activeLevel: number, color) => {\n    let l = this.project.levels[activeLevel].data.features.find((i: any) => i.settings.id === id);\n    let c = parseInt(\"0x\" + color, 16);\n\n    l.item.material[0].color.setHex(c);\n  }\n\n  renderObject = (object: any) => {\n    this.project.objects.push(Object.assign({}, object));\n    this.processData(object);\n  }\n\n  processData = (object: any) => {\n    object.data.features.forEach((i: any) => {\n      switch(object.type3d) {\n        case \"3D_POLYGON\":\n          this.add3DPolygon(i, object.id, object.settings);\n          break;\n        case \"BUILDINGS\":\n          this.addBuildings(i, object.id, object.settings);\n          break;\n        case \"LEVELS\":\n          this.addLevels(i, object.id, object.settings);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n}\n","export default class FileError extends Error {\n\n  constructor(...args) {\n    super(...args);\n    Error.captureStackTrace(this, FileError);\n  }\n\n}\n","import React, { Component } from 'react';\nimport type { EditorState } from './types/EditorState';\nimport Layout from './components/Layout';\nimport Builder from './graphics/Builder';\nimport FileService from './services/FileService';\nimport IdService from './services/IdService';\nimport Mixin from './../mixin';\n\nimport ErrorHandler from './errors/ErrorHandler';\n\n// to be able to demonstrate faster, will be removed when deployed\nimport ExampleData from './../sample_data/example.json';\n\n// default Config settings\nimport Config from './../config.json';\n\nclass ReactComponent extends Component<{}, EditorState>{}\n\nexport default class Editor extends Mixin(ReactComponent, FileService, IdService, Builder, ErrorHandler) {\n\n  builder: Builder;\n  lastMenu: string;\n  project: any;\n  levelToChangeIndex: number;\n  addObjectData: any;\n\n  componentWillMount = () => {\n    this.project = {};\n    this.addObjectData = {};\n\n    this.project.projectName = \"\";\n    this.project.projectDescription = \"\";\n\n    this.setState({\n      menu: \"START\",\n      activeLevel: 0,\n      objects: [],\n      levels: []\n    });\n  }\n\n  componentDidMount = async () => {\n    // to be able to demonstrate faster,this part will be removed on publish\n    this.changeMenu(\"PROJECT_MENU\");\n    await this.openProject(ExampleData);\n  }\n\n  createProject = () => {\n    let projectId = this.guid();\n    let { objects } = this.state;\n\n    this.project = {\n      ...this.project,\n      id: projectId\n    };\n\n    if(objects.length > 0 && this.project.projectName.length > 0) {\n      this.changeMenu(\"PROJECT_MENU\");\n\n      let offsetCoords = objects.find(i => i.type3d === \"3D_POLYGON\").data.features.find((i: any) => typeof i.properties.DISPLAY_XY !== \"undefined\").properties.DISPLAY_XY.coordinates;\n\n      this.project.coordinates = {lat: offsetCoords[0], lon: offsetCoords[1]};\n\n      this.openProject(this.projectData);\n    } else {\n      throw new Error(\"You can't create a project without providing a valid venue data and a name.\");\n    }\n  }\n\n  changeMenu = (menu: string) => {\n    this.lastMenu = this.state.menu;\n\n    this.setState({\n      menu\n    });\n  }\n\n  renderMenu = () => {\n    let { menu } = this.state;\n\n    switch(menu) {\n      case \"START\":\n        return this.startMenu();\n      case \"NEW_MODEL_1\":\n        return this.newModel1();\n      case \"NEW_MODEL_2\":\n        return this.newModel2();\n      case \"MANUAL_GEOJSON\":\n        return this.manualGeoJSON();\n      case \"PROJECT_MENU\":\n        return this.projectMenu();\n      case \"ADD_ONE\":\n        return this.addOne();\n      case \"EDIT_ONE\":\n        return this.editOne();\n      case \"EDIT_LEVEL_TWO\":\n        return this.editLevelTwo();\n      default:\n        break;\n    }\n  }\n\n  randomColor = () => {\n    let colors = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    return colors[Math.floor(Math.random() * colors.length)] + colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  get projectData() {\n    return {...this.project, objects: this.state.objects};\n  }\n\n  get projectLevels(): any {\n    let l = {};\n\n    let {\n      levels\n    } = this.state;\n\n    if(levels.length > 0) {\n      levels.forEach((j: any) => {\n        j.data.features.forEach((i: any) => {\n          let d = {\n            name: i.properties.NAME,\n            shortName: i.properties.SHORT_NAME,\n            id: i.properties.LEVEL_ID\n          };\n\n          if(Object.keys(l).indexOf(i.properties.ORDINAL.toString()) === -1) {\n            l[i.properties.ORDINAL] = [];\n          }\n\n          l[i.properties.ORDINAL].push(d);\n        });\n      });\n    }\n    return l;\n  }\n\n  addObject = async () => {\n    if(typeof this.addObjectData.object !== \"undefined\") {\n      let { objects } = this.state;\n      let type = typeof this.addObjectData.type !== \"undefined\" ? this.addObjectData.type : \"BUILDINGS\";\n\n      let {\n        object,\n        name\n      } = this.addObjectData;\n\n      switch(type) {\n        case \"BUILDINGS\":\n          if(typeof object.features[0] !== \"undefined\") {\n            if(typeof object.features[0].properties.HEIGHT !== \"undefined\") {\n              let id = this.guid();\n              let o = {data: object, type3d: type, id, name: name, settings: { material: { sideColor: \"#dddddd\", color: \"#dddddd\" }, extrude: {...Config.extrudeSettings, depth: object.features[0].properties.HEIGHT }}};\n\n              objects.push(o);\n\n              await this.setState({\n                objects\n              });\n\n              this.renderObject(o);\n            }\n          } else {\n            console.log(\"Type error\");\n          }\n          break;\n        case \"LEVELS\":\n          let id = this.guid();\n          // let o = {data: object, type3d: type, id, name: name, settings: { material: { sideColor: Config.sideColor, color: Config.sideColor } }};\n          let o = {data: object, type3d: type, id, name};\n          this.renderObject(o);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  addGeoJSON = async (e: any) => {\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"error\") {\n      this.handleError(res.error);\n    } else {\n      this.addObjectData.object = res.data;\n    }\n  }\n\n  renderLevels = () => {\n    let { activeLevel } = this.state;\n    return (\n      <section className=\"levels\">\n        {Object.keys(this.projectLevels).map((i) => <div className={activeLevel === parseInt(i, 10) ? 'active' : ''} key={i}>{i}</div>)}\n      </section>\n    );\n  }\n\n  openProject = async (data: any) => {\n    let {\n      projectName,\n      projectDescription,\n      id,\n      objects,\n      coordinates,\n      levels\n    } = data;\n\n    await this.setState({\n      objects,\n      levels\n    });\n\n    this.project = { projectName, projectDescription, coordinates, id, levels };\n\n    this.initBuilder(this.refs[\"3d-view-container\"]);\n    this.loadProject(this.projectData);\n  }\n\n  getGeo3D = async (e: any) => {\n    let { objects } = this.state;\n\n    if(!(objects.length === 0)) {\n      this.setState({\n        objects: []\n      });\n    }\n\n    let res = await this.readFile(e, \"geo3d\");\n\n    if(res.status === \"error\") {\n      this.handleError(res.error);\n    } else {\n      this.openProject(res.data);\n    }\n  }\n\n  randomColor = () => {\n    let colors = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    return colors[Math.floor(Math.random() * colors.length)] + colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  getGeoJSON = async (e: any) => {\n    let { objects } = this.state;\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"error\") {\n      this.handleError(res.error);\n    } else {\n      let id = this.guid();\n\n      objects.push( {data: res.data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, settings: { extrude: Config.extrudeSettings, material: { sideColor: Config.sideColor, color: Config.defaultColor} } });\n    }\n  }\n\n  validateManualData = (type: \"ANY\") => {\n    // needs to be editted due to edit project after creation\n    let { objects } = this.state;\n    let { value } = (this.refs[\"manual-geojson\"]);\n\n    try {\n      let data = JSON.parse(value);\n      let isVenue = this.isVenue(data);\n\n      if(isVenue.status === \"success\") {\n        let id = this.guid();\n\n        objects.push({data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, settings: {extrude: Config.extrudeSettings, material: {sideColor: Config.sideColor, color: Config.defaultColor}}});\n\n        this.setState({\n          menu: \"NEW_MODEL_1\",\n          objects\n        });\n      } else {\n        this.handleError(isVenue.error);\n      }\n    } catch(e) {\n      this.handleError(e);\n    }\n  }\n\n  getVenue = async (e: any) => {\n    let { objects } = this.state;\n\n    if(!(objects.length === 0)) {\n      await this.setState({\n        objects: []\n      });\n    }\n\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"success\") {\n      let isVenue = this.isVenue(res.data);\n\n      if(isVenue.status === \"success\") {\n        let id = this.guid();\n\n        objects.push({data: res.data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, settings: {extrude: Config.extrudeSettings, material: {sideColor: Config.sideColor, color: Config.defaultColor}} });\n      } else {\n        throw new Error(isVenue.error);\n      }\n    } else {\n      throw new Error(res.error);\n    }\n  }\n\n  getLevels = async (e: any) =>  {\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"success\") {\n      let isLevels = this.isLevels(res.data);\n\n      if(isLevels.status === \"success\") {\n        let id = this.guid();\n\n        let o = {\n          data: res.data,\n          type3d: \"LEVELS\",\n          name: \"LEVEL\",\n          id,\n          settings: {\n            extrude: Config.extrudeSettings,\n            material: {\n              sideColor: Config.sideColor,\n              color: Config.defaultColor\n            }\n          }\n        };\n\n        o.data.features.forEach((i: any) => {\n          let id = this.guid();\n\n          let r = this.randomColor();\n          let g = this.randomColor();\n          let b = this.randomColor();\n\n          let color = parseInt(\"0x\" + r + g + b, 16);\n          i.settings = {\n            material: {\n              color,\n              sideColor: Config.sideColor\n            },\n            extrude: Config.extrudeSettings,\n            id\n          };\n        });\n\n        this.project.levels = [o];\n\n        this.setState({\n          levels: o\n        });\n      } else {\n        throw new Error(isLevels.error);\n      }\n    } else {\n      throw new Error(res.error);\n    }\n  }\n\n  startMenu = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"form-group\">\n          <button className=\"btn-default btn-bordered\" onClick={() => this.changeMenu(\"NEW_MODEL_1\")}>\n            <i className=\"fas fa-plus\"></i>\n            NEW\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default btn-bordered\">\n              <i className=\"far fa-folder-open\"></i>\n              OPEN\n          </label>\n          <input type=\"file\" accept=\".geo3d\" id=\"up-v\" className=\"upload-default\" onChange={this.getGeo3D} />\n        </div>\n      </section>\n    </aside>\n  )\n\n  newModel1 = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => {\n          this.project.projectName = \"\";\n          this.project.projectDescription = \"\";\n          this.setState({\n            menu: \"START\",\n            objects: []\n          });\n        }}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Project Name (*)</label>\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.project.projectName = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Project Description</label>\n          <textarea rows={5} className=\"inp-default\" onChange={(e) => this.project.projectDescription = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default\">\n            <i className=\"fas fa-folder-open\"></i>\n            Venue GeoJSON\n          </label>\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.getVenue} />\n        </div>\n        <div className=\"form-group\">\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\n        </div>\n      </section>\n      <button className=\"btn-default btn-bordered\" onClick={() => this.changeMenu(\"NEW_MODEL_2\")}>\n          NEXT\n      </button>\n    </aside>\n  )\n\n  newModel2 = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => {\n          this.project.projectName = \"\";\n          this.project.projectDescription = \"\";\n          this.setState({\n            menu: \"START\",\n            objects: []\n          });\n        }}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default\">\n            <i className=\"fas fa-folder-open\"></i>\n            Levels GeoJSON\n          </label>\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.getLevels} />\n        </div>\n        <div className=\"form-group\">\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\n        </div>\n      </section>\n      <button className=\"btn-default btn-bordered\" onClick={this.createProject}>\n          NEXT\n      </button>\n    </aside>\n  )\n\n  manualGeoJSON = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => this.setState({menu: \"NEW_MODEL_1\"})}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Venue GeoJSON</label>\n          <textarea rows={12} className=\"inp-default\" ref=\"manual-geojson\" />\n        </div>\n      </section>\n      <button className=\"btn-default\" onClick={this.validateEntered}>\n        SAVE\n      </button>\n    </aside>\n  )\n\n  projectMenu = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"form-group\">\n          <button className=\"btn-default\" onClick={() => this.changeMenu(\"ADD_ONE\")}>\n            <i className=\"fas fa-plus\"></i>\n            ADD\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn-default\" onClick={() => this.changeMenu(\"EDIT_ONE\")}>\n            <i className=\"fas fa-pen\"></i>\n            EDIT\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn-default\" onClick={() => this.saveProjectLocal(this.projectData)}>\n            <i className=\"fas fa-download\"></i>\n            SAVE\n          </button>\n        </div>\n      </section>\n      <button className=\"btn-default\" onClick={() => window.location.reload()}>\n        QUIT\n      </button>\n    </aside>\n  )\n\n  addOne = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => this.setState({\n            menu: this.lastMenu\n        })}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Name (*)</label>\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.addObjectData.name = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Level (*)</label>\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.addObjectData.level = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Type (*)</label>\n          <select className=\"inp-default\" onChange={(e) => this.addObjectData.type = e.target.value}>\n            <option value=\"BUILDINGS\">BUILDINGS</option>\n            <option value=\"LEVELS\">LEVELS</option>\n            <option value=\"GROUND\">GROUND</option>\n            <option value=\"OBJECT\">OBJECT</option>\n            <option value=\"LINE\">LINE</option>\n            <option value=\"PATH\">PATH</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default\">\n            <i className=\"fas fa-upload\"></i>\n            GeoJSON\n          </label>\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.addGeoJSON} />\n        </div>\n        <div className=\"form-group\">\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\n        </div>\n      </section>\n      <button className=\"btn-default btn-bordered\" onClick={this.addObject}>\n        <i className=\"fas fa-plus\"></i>\n        ADD\n      </button>\n    </aside>\n  )\n\n  editLevelTwo = () => (\n    <form className=\"aside\" onSubmit={(e) => this.editLevel(e, this.refs[\"level-color\"].value, this.refs[\"c-color-prev\"])}>\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => this.setState({\n            menu: this.lastMenu\n        })}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"label-default\">Current color: </label>\n          <div ref=\"c-color-prev\" style={{ backgroundColor: `#${this.state.levels[this.state.activeLevel].data.features[this.levelToChangeIndex].settings.material.color.toString(16)}`, padding: 15 }} className=\"btn-default\"></div>\n        </div>\n        <div className=\"form-group\">\n          <input placeholder=\"Color: \" className=\"inp-default\" ref=\"level-color\" />\n        </div>\n      </section>\n      <button className=\"btn-default\">\n        UPDATE\n      </button>\n    </form>\n  )\n\n  editLevel = async (e: any, color: string, prev: HTMLDivElement) => {\n    prev.style.backgroundColor = \"#\".concat(color);\n    e.preventDefault();\n    let i = this.levelToChangeIndex;\n    let {\n      activeLevel,\n      levels\n    } = this.state;\n\n    levels[activeLevel].data.features[i].settings.material.color = parseInt(color, 16);\n\n    await this.setState({\n      levels\n    });\n\n    this.changeLevelColor(levels[activeLevel].data.features[i].settings.id, activeLevel, color);\n  }\n\n  editLevelList = () => (\n    <section>\n      {this.state.levels[this.state.activeLevel].data.features.map((f: any, i: number) => <div className=\"form-group\" key={i}><button style={{backgroundColor: `#${f.settings.material.color.toString(16)}`, textShadow: \"0px 1px 1px #000\"}} onClick={() => {\n        this.levelToChangeIndex = i;\n        this.changeMenu(\"EDIT_LEVEL_TWO\");\n      }} className=\"btn-default\">{f.properties.NAME} - {f.properties.CATEGORY}</button></div>)}\n    </section>\n  )\n\n  editOne = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => this.changeMenu(\"PROJECT_MENU\")}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        {this.editLevelList()}\n        <div className=\"form-group\">\n\n        </div>\n      </section>\n    </aside>\n  )\n\n  render = () => (\n    <Layout flexDirection=\"row\">\n      {this.renderMenu()}\n      {this.renderLevels()}\n      <div ref=\"3d-view-container\" id=\"geo3d-view-container\" />\n    </Layout>\n  )\n\n}\n","/* eslint-disable */\n\nexport default (baseClass, ...mixins) => {\n  class base extends baseClass {\n      constructor (...args) {\n          super(...args);\n          mixins.forEach((mixin) => {\n              copyProps(this, new mixin());\n          });\n      }\n  }\n  let copyProps = (target, source) => {\n      Object.getOwnPropertyNames(source)\n      .concat(Object.getOwnPropertySymbols(source))\n      .forEach((prop) => {\n         if (!prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/))\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\n       });\n  }\n  mixins.forEach((mixin) => {\n      copyProps(base.prototype, mixin.prototype);\n      copyProps(base, mixin);\n  });\n  return base;\n}\n","export default class FileService {\n\n  reader: FileReader;\n  lastReadFile: any;\n\n  constructor() {\n    this.reader = new FileReader();\n    this.reader.onload = this.readParser;\n  }\n\n  sleep = (ms: number): Promise<Function> => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  readFile = async (e: any, ext: string): any => {\n    if(e.target.files.length === 1) {\n      let file = e.target.files[0];\n      let fileExtArr = (/[.]/.exec(file.name)) ? /[^.]+$/.exec(file.name) : undefined;\n\n      if(typeof fileExtArr !== \"undefined\") {\n        let fileExt = fileExtArr[0];\n\n        if(fileExt === ext || fileExt === \"json\") {\n          this.reader.readAsText(file);\n          let result: any = await this.fetchData();\n\n          return result;\n        } else {\n          // unexpected file type\n          return {\n            status: \"error\",\n            error: {\n              code: 501,\n              message: \"Unexpected file type.\"\n            }\n          };\n        }\n      } else {\n        // unexpected error\n        return {\n          status: \"error\",\n          error: {\n            code: 502,\n            message: \"Unexpected error.\"\n          }\n        };\n      }\n    } else {\n      // more than 1 file\n      return {\n        status: \"error\",\n        error: {\n          code: 503,\n          message: \"Unexpected file type.\"\n        }\n      };\n    }\n  }\n\n  readParser = (e: any) => {\n    try {\n      let data = JSON.parse(e.target.result);\n      this.lastReadFile = { status: \"success\", data: data };\n    } catch(e) {\n      return {\n        status: \"error\",\n        error: {\n          code: 504,\n          message: \"Parsing error.\"\n        }\n      };\n    }\n  }\n\n  fetchData = async (): Promise<JSON> => {\n    if(typeof this.lastReadFile !== \"undefined\") {\n      let d = this.lastReadFile;\n      this.lastReadFile = undefined;\n\n      return d;\n    } else {\n      await this.sleep(300);\n      return this.fetchData();\n    }\n  }\n\n  isGeo3D = (d: any) => {\n    if(typeof d.coordinates !== \"undefined\" && typeof d.id !== \"undefined\" && typeof d.objects !== \"undefined\" && typeof d.projectName !== \"undefined\" && typeof d.projectDescription !== \"undefined\") {\n      return {\n          \"status\": \"success\"\n      };\n    } else {\n      // unexpected format\n      return {\n          status: \"error\",\n          error: {\n            code: 505,\n            message: \"Unexpected format in the provided data.\"\n          }\n      };\n    }\n  }\n\n  isLevels = (d: any) => {\n    if(typeof d.features !== \"undefined\" && typeof d.features[0] !== \"undefined\") {\n      if(typeof d.features[0].properties !== \"undefined\") {\n        if(typeof d.features[0].properties.LEVEL_ID !== \"undefined\") {\n          return {\n            status: \"success\"\n          };\n        } else {\n          // not a levels file\n          return {\n            status: \"error\",\n            error: {\n              code: 506,\n              message: \"Levels file's {features} array must contain {LEVEL_ID} in it's {properties}.\"\n            }\n          };\n        }\n      } else {\n        // unexpected geojson data\n        return {\n          status: \"error\",\n          error: {\n            code: 507,\n            message: \"File is formatted in a bad shape.\"\n          }\n        };\n      }\n    } else {\n      // unexpected format\n      return {\n        status: \"error\",\n        error: {\n          code: 508,\n          message: \"Unexpected format in the provided data.\"\n        }\n      };\n    }\n  }\n\n  isVenue = (d: any) => {\n    if(typeof d.features !== \"undefined\" && typeof d.features[0] !== \"undefined\") {\n      if(typeof d.features[0].properties !== \"undefined\") {\n        if(typeof d.features[0].properties.DISPLAY_XY !== \"undefined\" && typeof d.features[0].properties.DISPLAY_XY.coordinates !== \"undefined\") {\n          return {\n            status: \"success\"\n          };\n        } else {\n          // not a venue file\n          return {\n            status: \"error\",\n            error: {\n              code: 506,\n              message: \"Venue file's {features} array must contain {DISPLAY_XY} in it's {properties}.\"\n            }\n          };\n        }\n      } else {\n        // unexpected geojson data\n        return {\n          status: \"error\",\n          error: {\n            code: 507,\n            message: \"File is formatted in a bad shape.\"\n          }\n        };\n      }\n    } else {\n      // unexpected format\n      return {\n        status: \"error\",\n        error: {\n          code: 508,\n          message: \"Unexpected format in the provided data.\"\n        }\n      };\n    }\n  }\n\n  saveProjectLocal = (projectData: any) => {\n    let filename = `${projectData.projectName}.geo3d`;\n\n    let file = new File([JSON.stringify(projectData, null, 2)], `${filename}`, {type: \"text/plain;charset=utf-8\"});\n\n    if (window.navigator.msSaveOrOpenBlob)\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    else {\n      let a = document.createElement(\"a\"),\n          url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(() => {\n          document.body.removeChild(a);\n          window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n}\n","export default class IdService {\n  guid = (): string => {\n    let s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    };\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n}\n","import FileError from './FileError';\nimport type { ErrorData } from './../types/Error';\n\nexport default class ErrorHandler {\n\n  handleError = (error: ErrorData) => {\n    let { message, code } = error;\n\n    if(code >= 500 && code < 600) {\n      // file errors\n      throw new FileError(message, code);\n    } else {\n      throw new Error(\"Unexpected error.\");\n    }\n  }\n\n}\n","import React from 'react';\nimport Editor from './lib/Editor';\n\nconst App = () => <Editor />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}