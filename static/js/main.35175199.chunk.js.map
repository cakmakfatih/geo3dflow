{"version":3,"sources":["lib/components/Layout.js","lib/services/VectorGenerator.js","lib/graphics/Renderer.js","lib/graphics/Builder.js","lib/errors/FileError.js","lib/Editor.js","mixin.js","lib/services/FileService.js","lib/services/IdService.js","lib/errors/ErrorHandler.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","react_default","a","createElement","className","style","flexDirection","children","VectorGenerator","_this","this","scaler","arguments","length","undefined","coords","Object","classCallCheck","latLonToXY","mapWidth","mapHeight","generateVector","y","coordinates","x","xOffset","z","zOffset","v","OrbitControls","require","THREE","Builder","loadProject","project","levels","map","i","assign","forEach","data","features","j","objects","setOffsets","lat","lon","groundStart","find","name","settings","extrude","depth","processData","renderObject","object","push","type3d","add3DPolygon","id","addBuildings","addLevels","initBuilder","container","scene","camera","getBoundingClientRect","width","height","renderer","antialias","shadowMap","enabled","setSize","appendChild","domElement","window","addEventListener","aspect","offsetWidth","updateProjectionMatrix","controls","maxPolarAngle","Math","PI","minDistance","maxDistance","addSkybox","viewLoop","requestAnimationFrame","update","render","position","setY","geometry","material","side","color","cube","add","vectorGenerator","set","lookAt","addGround","sidesMaterial","parseInt","sideColor","pts","k","slice","q","scaledVector","shape","item","rotation","randomColor","colors","floor","random","coordinatesArray","walls","f","properties","HEIGHT","vertices","previousVertexIndex","faces","computeVertexNormals","computeFaceNormals","items","startCoords","moveTo","lineTo","textureLoader","mapImage","concat","load","anisotropy","capabilities","getMaxAnisotropy","minFilter","ground","FileError","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","Error","captureStackTrace","assertThisInitialized","Editor","componentWillMount","addObjectData","projectName","projectDescription","setState","menu","activeLevel","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","changeMenu","openProject","ExampleData","stop","createProject","projectId","guid","state","objectSpread","offsetCoords","DISPLAY_XY","projectData","lastMenu","renderMenu","startMenu","newModel1","newModel2","manualGeoJSON","projectMenu","addOne","editOne","addObject","_callee2","type","_this$addObjectData","_id","_o","o","_context2","t0","Config","extrudeSettings","console","log","abrupt","addGeoJSON","_callee3","e","res","_context3","readFile","sent","status","handleError","error","renderLevels","keys","projectLevels","key","_callee4","_context4","refs","getGeo3D","_callee5","_context5","getGeoJSON","_callee6","_context6","defaultColor","validateManualData","value","JSON","parse","isVenue","getVenue","_callee7","_context7","getLevels","_callee8","isLevels","_context8","r","g","b","onClick","htmlFor","accept","onChange","target","rows","ref","validateEntered","saveProjectLocal","location","reload","level","components_Layout","l","d","NAME","shortName","SHORT_NAME","LEVEL_ID","indexOf","ORDINAL","toString","baseClass","mixins","base","_baseClass","_len2","_key2","mixin","copyProps","inherits","source","getOwnPropertyNames","getOwnPropertySymbols","prop","match","defineProperty","getOwnPropertyDescriptor","prototype","Mixin","Component","FileService","sleep","ms","Promise","resolve","setTimeout","_ref","asyncToGenerator","mark","ext","file","fileExtArr","fileExt","result","files","exec","reader","readAsText","fetchData","code","message","_x","_x2","readParser","lastReadFile","isGeo3D","filename","File","stringify","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","click","removeChild","revokeObjectURL","FileReader","onload","s4","substring","App","Editor_Editor","Boolean","hostname","ReactDOM","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35175199.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Layout = (props: any) => (\n    <div className=\"layout\" style={{flexDirection: props.flexDirection || \"row\"}}>\n        {\n            props.children\n        }\n    </div>\n);\n\nexport default Layout;\n","import type { ScaledVector } from './../types/ScaledVector';\n\nexport class VectorGenerator {\n    mapWidth: number;\n    mapHeight: number;\n    scaler: number;\n\n    xOffset: number;\n    zOffset: number;\n\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(scaler: number = 360/0.011, coords: number[]){\n        this.mapWidth = 1280;\n        this.mapHeight = 1280;\n\n        let v = this.latLonToXY(coords);\n\n        this.scaler = scaler * this.mapWidth/360;\n\n        this.xOffset = v[0]*this.scaler;\n        this.zOffset = v[1]*this.scaler;\n    }\n\n    latLonToXY = (coords: number[]): number[] => {\n        return [\n            ((this.mapWidth/360) * (180 + coords[0])),\n            ((this.mapHeight/360) * (90 - coords[1]))\n        ];\n    }\n\n    generateVector = (coords: number[], y: number = 2): ScaledVector => {\n        let coordinates = this.latLonToXY(coords);\n        return {\n            x: coordinates[0]*this.scaler - this.xOffset,\n            y: y,\n            z: coordinates[1]*this.scaler - this.zOffset\n        };\n    }\n}\n","import * as THREE from \"three\";\nimport { Scene, PerspectiveCamera, WebGLRenderer } from 'three';\nimport { VectorGenerator } from './../services/VectorGenerator';\nimport type { ScaledVector } from './../types/ScaledVector';\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default class Renderer {\n\n  scene: Scene;\n  camera: PerspectiveCamera;\n  renderer: WebGLRenderer;\n  controls: CameraControls;\n  vectorGenerator: VectorGenerator;\n  container: HTMLDivElement;\n  project: any;\n\n  initBuilder = (container: HTMLDivElement) => {\n    this.container = container;\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(90, this.container.getBoundingClientRect().width / this.container.getBoundingClientRect().height, 0.1, 10000);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.setSize(this.container.getBoundingClientRect().width, this.container.getBoundingClientRect().height);\n    this.container.appendChild(this.renderer.domElement);\n\n    window.addEventListener('resize', () => {\n      this.renderer.setSize(this.container.getBoundingClientRect().width, this.container.getBoundingClientRect().height);\n      this.camera.aspect = this.container.offsetWidth / this.container.getBoundingClientRect().height;\n      this.camera.updateProjectionMatrix();\n    });\n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.maxPolarAngle = Math.PI/2;\n    this.controls.minDistance = 10;\n    this.controls.maxDistance = 2000;\n\n    this.addSkybox();\n    this.viewLoop();\n  }\n\n  viewLoop = () => {\n    requestAnimationFrame(this.viewLoop);\n    this.update();\n    this.render();\n  }\n\n  render = () => {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  update = () => {\n    if(this.camera.position.y < 90) {\n      this.camera.position.setY(90);\n    }\n    this.controls.update();\n  }\n\n  addSkybox = () => {\n    let geometry = new THREE.BoxGeometry(10000, 10000, 10000);\n\n    let material: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial({\n        side: THREE.DoubleSide,\n        color: 0xdddddd\n    });\n\n    let cube = new THREE.Mesh(geometry, material);\n    this.scene.add(cube);\n  }\n\n  setOffsets = (coords: any) => {\n    this.project.coordinates = coords;\n\n    this.vectorGenerator = new VectorGenerator(undefined, coords);\n    this.camera.position.set(1000, 1000, 1000);\n    this.camera.lookAt(0, 0, 0);\n    this.addGround(coords);\n  }\n\n  addGround(coords: number[]) {\n    var geometry = new THREE.PlaneGeometry( 10000, 10000, 32 );\n    let textureLoader = new THREE.TextureLoader();\n\n    let mapImage = `https://api.mapbox.com/styles/v1/mapbox/streets-v10/static/${coords[0]},${coords[1]},15.0,0,0/1280x1280?access_token=pk.eyJ1IjoiY2FrbWFrZmF0aWgiLCJhIjoiY2pxcGk1d3ZrMDFwYjQ5bzFqNncyYjl2NyJ9.MtGJZ74Cu-6R7K52rFrNeQ`;\n\n    let map = textureLoader.load(mapImage);\n\n    map.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\n    map.minFilter = THREE.LinearFilter;\n\n    var material = new THREE.MeshBasicMaterial({map: map, side: THREE.DoubleSide});\n\n    let ground = new THREE.Mesh(geometry, material);\n    ground.rotation.x -= Math.PI/2;\n\n    this.scene.add(ground);\n  }\n\n  addLevels = (i: any, id: string, settings: any) => {\n    let material = new THREE.MeshBasicMaterial({\n      color: i.settings.material.color\n    });\n\n    let sidesMaterial = new THREE.MeshBasicMaterial({ color: parseInt(settings.material.sideColor, 16), side: THREE.DoubleSide });\n    let pts = [];\n\n    i.geometry.coordinates.forEach((j: any) => {\n      j.forEach((k: any) => {\n        k.slice(1).forEach((q: any) => {\n            let scaledVector: ScaledVector = this.vectorGenerator.generateVector(q);\n            pts.push(new THREE.Vector2(scaledVector.x, -scaledVector.z));\n        });\n      });\n    });\n\n    let shape = new THREE.Shape(pts);\n    let geometry = new THREE.ExtrudeBufferGeometry(shape, settings.extrude);\n\n    let item = new THREE.Mesh(geometry, [material, sidesMaterial]);\n\n    item.rotation.x += -Math.PI / 2;\n    item.position.setY(settings.extrude.depth);\n\n    i.item = item;\n\n    this.scene.add(item);\n  }\n\n  randomColor = () => {\n    let colors = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    return colors[Math.floor(Math.random() * colors.length)] + colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  addBuildings = (i: any, id: string, settings: any) => {\n    let material = new THREE.MeshBasicMaterial({\n      color: settings.material.color\n    });\n\n    let coordinatesArray = i.geometry.coordinates[0][0];\n    let walls = new THREE.Geometry();\n\n    coordinatesArray.forEach((f) => {\n        let coordinates = this.vectorGenerator.generateVector(f, i.properties.HEIGHT);\n        walls.vertices.push(new THREE.Vector3(coordinates.x, 0, coordinates.z));\n        walls.vertices.push(new THREE.Vector3(coordinates.x, coordinates.y*5, coordinates.z));\n    });\n\n    let previousVertexIndex = walls.vertices.length - 2;\n\n    for(let i = 0; i < walls.vertices.length; i += 2){\n        walls.faces.push(new THREE.Face3(i, i + 1, previousVertexIndex));\n        walls.faces.push(new THREE.Face3(i + 1, previousVertexIndex + 1, previousVertexIndex));\n        previousVertexIndex = i;\n    }\n\n    walls.computeVertexNormals();\n    walls.computeFaceNormals();\n    material.side = THREE.DoubleSide;\n    let items = new THREE.Mesh(walls, material);\n    items.position.setY(this.project.groundStart * 2);\n    this.scene.add(items);\n\n    this.project.objects.find((i: any) => i.id === id).item = items;\n  }\n\n  add3DPolygon = (i: any, id: string, settings: any) => {\n    let material = new THREE.MeshBasicMaterial({\n      color: parseInt(settings.material.color, 16)\n    });\n\n    let sidesMaterial = new THREE.MeshBasicMaterial({ color: parseInt(settings.material.sideColor, 16), side: THREE.DoubleSide });\n\n    let shape = new THREE.Shape();\n\n    let startCoords = this.vectorGenerator.generateVector(i.geometry.coordinates[0][0][0]);\n\n    shape.moveTo(startCoords.x, -startCoords.z);\n\n    i.geometry.coordinates.forEach((j: any) => {\n      j.forEach((k: any) => {\n        k.slice(1).forEach((q: any) => {\n            let scaledVector: ScaledVector = this.vectorGenerator.generateVector(q);\n            shape.lineTo(scaledVector.x, -scaledVector.z);\n        });\n      });\n    });\n\n    let geometry = new THREE.ExtrudeBufferGeometry(shape, settings.extrude);\n    let item = new THREE.Mesh(geometry, [material, sidesMaterial]);\n\n    item.rotation.x += -Math.PI / 2;\n    item.position.setY(settings.extrude.depth / 2);\n\n    this.project.objects.find((i: any) => i.id === id).item = item;\n\n    this.scene.add(item);\n  }\n\n}\n","import Renderer from './Renderer';\n\nexport default class Builder extends Renderer {\n\n  project: any;\n\n  loadProject = (project: any) => {\n\n    let levels = project.levels.map((i) => Object.assign([], i));\n\n    levels.forEach((i: any) => {\n      i.data = Object.assign({}, i.data, {\n        features: i.data.features.map((j: any) => Object.assign({}, j))\n      });\n    });\n\n    this.project = Object.assign({}, project, {objects: project.objects.map((i: any) => Object.assign({}, i)), levels});\n\n    this.setOffsets([this.project.coordinates.lat, this.project.coordinates.lon]);\n    this.project.groundStart = this.project.objects.find((i: any) => i.name === \"VENUE\").settings.extrude.depth / 2;\n\n    this.project.levels.forEach((i: any) => {\n      this.processData(i);\n    });\n\n    this.project.objects.forEach((i: any) => {\n      this.processData(i);\n    });\n  }\n\n  renderObject = (object: any) => {\n    this.project.objects.push(Object.assign({}, object));\n    this.processData(object);\n  }\n\n  processData = (object: any) => {\n    object.data.features.forEach((i: any) => {\n      switch(object.type3d) {\n        case \"3D_POLYGON\":\n          this.add3DPolygon(i, object.id, object.settings);\n          break;\n        case \"BUILDINGS\":\n          this.addBuildings(i, object.id, object.settings);\n          break;\n        case \"LEVELS\":\n          this.addLevels(i, object.id, object.settings);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n}\n","export default class FileError extends Error {\n\n  constructor(...args) {\n    super(...args);\n    Error.captureStackTrace(this, FileError);\n  }\n\n}\n","import React, { Component } from 'react';\nimport type { EditorState } from './types/EditorState';\nimport Layout from './components/Layout';\nimport Builder from './graphics/Builder';\nimport FileService from './services/FileService';\nimport IdService from './services/IdService';\nimport Mixin from './../mixin';\n\nimport ErrorHandler from './errors/ErrorHandler';\n\n// to be able to demonstrate faster, will be removed when deployed\nimport ExampleData from './../sample_data/example.json';\n\n// default Config settings\nimport Config from './../config.json';\n\nclass ReactComponent extends Component<{}, EditorState>{}\n\nexport default class Editor extends Mixin(ReactComponent, FileService, IdService, Builder, ErrorHandler) {\n\n  builder: Builder;\n  lastMenu: string;\n  project: any;\n\n  addObjectData: any;\n\n  componentWillMount = () => {\n    this.project = {};\n    this.addObjectData = {};\n\n    this.project.projectName = \"\";\n    this.project.projectDescription = \"\";\n\n    this.setState({\n      menu: \"START\",\n      activeLevel: 0,\n      objects: [],\n      levels: {}\n    });\n  }\n\n  componentDidMount = async () => {\n    // to be able to demonstrate faster,this part will be removed on publish\n    this.changeMenu(\"PROJECT_MENU\");\n    this.openProject(ExampleData);\n  }\n\n  createProject = () => {\n    let projectId = this.guid();\n    let { objects } = this.state;\n\n    this.project = {\n      ...this.project,\n      id: projectId\n    };\n\n    if(objects.length > 0 && this.project.projectName.length > 0) {\n      this.changeMenu(\"PROJECT_MENU\");\n\n      let offsetCoords = objects.find(i => i.type3d === \"3D_POLYGON\").data.features.find((i: any) => typeof i.properties.DISPLAY_XY !== \"undefined\").properties.DISPLAY_XY.coordinates;\n\n      this.project.coordinates = {lat: offsetCoords[0], lon: offsetCoords[1]};\n\n      this.openProject(this.projectData);\n    } else {\n      throw new Error(\"You can't create a project without providing a valid venue data and a name.\");\n    }\n  }\n\n  changeMenu = (menu: string) => {\n    this.lastMenu = this.state.menu;\n\n    this.setState({\n      menu\n    });\n  }\n\n  renderMenu = () => {\n    let { menu } = this.state;\n\n    switch(menu) {\n      case \"START\":\n        return this.startMenu();\n      case \"NEW_MODEL_1\":\n        return this.newModel1();\n      case \"NEW_MODEL_2\":\n        return this.newModel2();\n      case \"MANUAL_GEOJSON\":\n        return this.manualGeoJSON();\n      case \"PROJECT_MENU\":\n        return this.projectMenu();\n      case \"ADD_ONE\":\n        return this.addOne();\n      case \"EDIT_ONE\":\n        return this.editOne();\n      default:\n        break;\n    }\n  }\n\n  randomColor = () => {\n    let colors = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    return colors[Math.floor(Math.random() * colors.length)] + colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  get projectData() {\n    return {...this.project, objects: this.state.objects};\n  }\n\n  get projectLevels(): any {\n    let l = {};\n\n    let {\n      levels\n    } = this.state;\n\n    if(levels.length > 0) {\n      levels.forEach((j: any) => {\n        j.data.features.forEach((i: any) => {\n          let d = {\n            name: i.properties.NAME,\n            shortName: i.properties.SHORT_NAME,\n            id: i.properties.LEVEL_ID\n          };\n\n          if(Object.keys(l).indexOf(i.properties.ORDINAL.toString()) === -1) {\n            l[i.properties.ORDINAL] = [];\n          }\n\n          l[i.properties.ORDINAL].push(d);\n        });\n      });\n    }\n    return l;\n  }\n\n  addObject = async () => {\n    if(typeof this.addObjectData.object !== \"undefined\") {\n      let { objects } = this.state;\n      let type = typeof this.addObjectData.type !== \"undefined\" ? this.addObjectData.type : \"BUILDINGS\";\n\n      let {\n        object,\n        name\n      } = this.addObjectData;\n\n      switch(type) {\n        case \"BUILDINGS\":\n          if(typeof object.features[0] !== \"undefined\") {\n            if(typeof object.features[0].properties.HEIGHT !== \"undefined\") {\n              let id = this.guid();\n              let o = {data: object, type3d: type, id, name: name, settings: { material: { sideColor: \"#dddddd\", color: \"#dddddd\" }, extrude: {...Config.extrudeSettings, depth: object.features[0].properties.HEIGHT }}};\n\n              objects.push(o);\n\n              await this.setState({\n                objects\n              });\n\n              this.renderObject(o);\n            }\n          } else {\n            console.log(\"Type error\");\n          }\n          break;\n        case \"LEVELS\":\n          let id = this.guid();\n          let o = {data: object, type3d: type, id, name: name, settings: { material: { sideColor: Config.sideColor, color: Config.sideColor } }};\n          this.renderObject(o);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  addGeoJSON = async (e: any) => {\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"error\") {\n      this.handleError(res.error);\n    } else {\n      this.addObjectData.object = res.data;\n    }\n  }\n\n  renderLevels = () => {\n    let { activeLevel } = this.state;\n    return (\n      <section className=\"levels\">\n        {Object.keys(this.projectLevels).map((i) => <div className={activeLevel === parseInt(i, 10) ? 'active' : ''} key={i}>{i}</div>)}\n      </section>\n    );\n  }\n\n  openProject = async (data: any) => {\n    let {\n      projectName,\n      projectDescription,\n      id,\n      objects,\n      coordinates,\n      levels\n    } = data;\n\n    await this.setState({\n      objects,\n      levels\n    });\n\n    this.project = { projectName, projectDescription, coordinates, id, levels };\n\n    this.initBuilder(this.refs[\"3d-view-container\"]);\n    this.loadProject(this.projectData);\n  }\n\n  getGeo3D = async (e: any) => {\n    let { objects } = this.state;\n\n    if(!(objects.length === 0)) {\n      this.setState({\n        objects: []\n      });\n    }\n\n    let res = await this.readFile(e, \"geo3d\");\n\n    if(res.status === \"error\") {\n      this.handleError(res.error);\n    } else {\n      this.openProject(res.data);\n    }\n  }\n\n  randomColor = () => {\n    let colors = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    return colors[Math.floor(Math.random() * colors.length)] + colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  getGeoJSON = async (e: any) => {\n    let { objects } = this.state;\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"error\") {\n      this.handleError(res.error);\n    } else {\n      let id = this.guid();\n\n      objects.push( {data: res.data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, settings: { extrude: Config.extrudeSettings, material: { sideColor: Config.sideColor, color: Config.defaultColor} } });\n    }\n  }\n\n  validateManualData = (type: \"ANY\") => {\n    // needs to be editted due to edit project after creation\n    let { objects } = this.state;\n    let { value } = (this.refs[\"manual-geojson\"]);\n\n    try {\n      let data = JSON.parse(value);\n      let isVenue = this.isVenue(data);\n\n      if(isVenue.status === \"success\") {\n        let id = this.guid();\n\n        objects.push({data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, settings: {extrude: Config.extrudeSettings, material: {sideColor: Config.sideColor, color: Config.defaultColor}}});\n\n        this.setState({\n          menu: \"NEW_MODEL_1\",\n          objects\n        });\n      } else {\n        this.handleError(isVenue.error);\n      }\n    } catch(e) {\n      this.handleError(e);\n    }\n  }\n\n  getVenue = async (e: any) => {\n    let { objects } = this.state;\n\n    if(!(objects.length === 0)) {\n      await this.setState({\n        objects: []\n      });\n    }\n\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"success\") {\n      let isVenue = this.isVenue(res.data);\n\n      if(isVenue.status === \"success\") {\n        let id = this.guid();\n\n        objects.push({data: res.data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, settings: {extrude: Config.extrudeSettings, material: {sideColor: Config.sideColor, color: Config.defaultColor}} });\n      } else {\n        throw new Error(isVenue.error);\n      }\n    } else {\n      throw new Error(res.error);\n    }\n  }\n\n  getLevels = async (e: any) =>  {\n    let res = await this.readFile(e, \"geojson\");\n\n    if(res.status === \"success\") {\n      let isLevels = this.isLevels(res.data);\n\n      if(isLevels.status === \"success\") {\n        let id = this.guid();\n\n        let o = {\n          data: res.data,\n          type3d: \"LEVELS\",\n          name: \"LEVEL\",\n          id,\n          settings: {\n            extrude: Config.extrudeSettings,\n            material: {\n              sideColor: Config.sideColor,\n              color: Config.defaultColor\n            }\n          }\n        };\n\n        o.data.features.forEach((i: any) => {\n          let id = this.guid();\n\n          let r = this.randomColor();\n          let g = this.randomColor();\n          let b = this.randomColor();\n\n          let color = parseInt(\"0x\" + r + g + b, 16);\n          i.settings = {\n            material: {\n              color,\n              sideColor: Config.sideColor\n            },\n            extrude: Config.extrudeSettings,\n            id\n          };\n        });\n\n        this.project.levels = [o];\n\n        this.setState({\n          levels: o\n        });\n      } else {\n        throw new Error(isLevels.error);\n      }\n    } else {\n      throw new Error(res.error);\n    }\n  }\n\n  startMenu = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"form-group\">\n          <button className=\"btn-default btn-bordered\" onClick={() => this.changeMenu(\"NEW_MODEL_1\")}>\n            <i className=\"fas fa-plus\"></i>\n            NEW\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default btn-bordered\">\n              <i className=\"far fa-folder-open\"></i>\n              OPEN\n          </label>\n          <input type=\"file\" accept=\".geo3d\" id=\"up-v\" className=\"upload-default\" onChange={this.getGeo3D} />\n        </div>\n      </section>\n    </aside>\n  )\n\n  newModel1 = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => {\n          this.project.projectName = \"\";\n          this.project.projectDescription = \"\";\n          this.setState({\n            menu: \"START\",\n            objects: []\n          });\n        }}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Project Name (*)</label>\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.project.projectName = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Project Description</label>\n          <textarea rows={5} className=\"inp-default\" onChange={(e) => this.project.projectDescription = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default\">\n            <i className=\"fas fa-folder-open\"></i>\n            Venue GeoJSON\n          </label>\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.getVenue} />\n        </div>\n        <div className=\"form-group\">\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\n        </div>\n      </section>\n      <button className=\"btn-default btn-bordered\" onClick={() => this.changeMenu(\"NEW_MODEL_2\")}>\n          NEXT\n      </button>\n    </aside>\n  )\n\n  newModel2 = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => {\n          this.project.projectName = \"\";\n          this.project.projectDescription = \"\";\n          this.setState({\n            menu: \"START\",\n            objects: []\n          });\n        }}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default\">\n            <i className=\"fas fa-folder-open\"></i>\n            Levels GeoJSON\n          </label>\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.getLevels} />\n        </div>\n        <div className=\"form-group\">\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\n        </div>\n      </section>\n      <button className=\"btn-default btn-bordered\" onClick={this.createProject}>\n          NEXT\n      </button>\n    </aside>\n  )\n\n  manualGeoJSON = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => this.setState({menu: \"NEW_MODEL_1\"})}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Venue GeoJSON</label>\n          <textarea rows={12} className=\"inp-default\" ref=\"manual-geojson\" />\n        </div>\n      </section>\n      <button className=\"btn-default\" onClick={this.validateEntered}>\n        SAVE\n      </button>\n    </aside>\n  )\n\n  projectMenu = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"form-group\">\n          <button className=\"btn-default\" onClick={() => this.changeMenu(\"ADD_ONE\")}>\n            <i className=\"fas fa-plus\"></i>\n            ADD\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn-default\" onClick={() => this.changeMenu(\"EDIT_ONE\")}>\n            <i className=\"fas fa-pen\"></i>\n            EDIT\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn-default\" onClick={() => this.saveProjectLocal(this.projectData)}>\n            <i className=\"fas fa-download\"></i>\n            SAVE\n          </button>\n        </div>\n      </section>\n      <button className=\"btn-default\" onClick={() => window.location.reload()}>\n        QUIT\n      </button>\n    </aside>\n  )\n\n  addOne = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"btn-back\" onClick={() => this.setState({\n            menu: this.lastMenu\n        })}>\n          <i className=\"fas fa-chevron-left\"></i>\n          <span>BACK</span>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Name (*)</label>\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.addObjectData.name = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Level (*)</label>\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.addObjectData.level = e.target.value} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"\" className=\"label-default\">Type (*)</label>\n          <select className=\"inp-default\" onChange={(e) => this.addObjectData.type = e.target.value}>\n            <option value=\"BUILDINGS\">BUILDINGS</option>\n            <option value=\"LEVELS\">LEVELS</option>\n            <option value=\"GROUND\">GROUND</option>\n            <option value=\"OBJECT\">OBJECT</option>\n            <option value=\"LINE\">LINE</option>\n            <option value=\"PATH\">PATH</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default\">\n            <i className=\"fas fa-upload\"></i>\n            GeoJSON\n          </label>\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.addGeoJSON} />\n        </div>\n        <div className=\"form-group\">\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\n        </div>\n      </section>\n      <button className=\"btn-default btn-bordered\" onClick={this.addObject}>\n        <i className=\"fas fa-plus\"></i>\n        ADD\n      </button>\n    </aside>\n  )\n\n  editOne = () => (\n    <aside className=\"aside\">\n      <section className=\"aside-top\">\n        <div className=\"form-group\">\n          <button className=\"btn-default btn-bordered\" onClick={() => this.changeMenu(\"NEW_MODEL_1\")}>\n            <i className=\"fas fa-plus\"></i>\n            NEW\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"up-v\" className=\"btn-default btn-bordered\">\n              <i className=\"far fa-folder-open\"></i>\n              OPEN\n          </label>\n          <input type=\"file\" accept=\".geo3d\" id=\"up-v\" className=\"upload-default\" onChange={this.getGeo3D} />\n        </div>\n      </section>\n    </aside>\n  );\n\n  render = () => (\n    <Layout flexDirection=\"row\">\n      {this.renderMenu()}\n      {this.renderLevels()}\n      <div ref=\"3d-view-container\" id=\"geo3d-view-container\" />\n    </Layout>\n  )\n\n}\n","/* eslint-disable */\n\nexport default (baseClass, ...mixins) => {\n  class base extends baseClass {\n      constructor (...args) {\n          super(...args);\n          mixins.forEach((mixin) => {\n              copyProps(this, new mixin());\n          });\n      }\n  }\n  let copyProps = (target, source) => {\n      Object.getOwnPropertyNames(source)\n      .concat(Object.getOwnPropertySymbols(source))\n      .forEach((prop) => {\n         if (!prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/))\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\n       });\n  }\n  mixins.forEach((mixin) => {\n      copyProps(base.prototype, mixin.prototype);\n      copyProps(base, mixin);\n  });\n  return base;\n}\n","export default class FileService {\n\n  reader: FileReader;\n  lastReadFile: any;\n\n  constructor() {\n    this.reader = new FileReader();\n    this.reader.onload = this.readParser;\n  }\n\n  sleep = (ms: number): Promise<Function> => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  readFile = async (e: any, ext: string): any => {\n    if(e.target.files.length === 1) {\n      let file = e.target.files[0];\n      let fileExtArr = (/[.]/.exec(file.name)) ? /[^.]+$/.exec(file.name) : undefined;\n\n      if(typeof fileExtArr !== \"undefined\") {\n        let fileExt = fileExtArr[0];\n\n        if(fileExt === ext || fileExt === \"json\") {\n          this.reader.readAsText(file);\n          let result: any = await this.fetchData();\n\n          return result;\n        } else {\n          // unexpected file type\n          return {\n            status: \"error\",\n            error: {\n              code: 501,\n              message: \"Unexpected file type.\"\n            }\n          };\n        }\n      } else {\n        // unexpected error\n        return {\n          status: \"error\",\n          error: {\n            code: 502,\n            message: \"Unexpected error.\"\n          }\n        };\n      }\n    } else {\n      // more than 1 file\n      return {\n        status: \"error\",\n        error: {\n          code: 503,\n          message: \"Unexpected file type.\"\n        }\n      };\n    }\n  }\n\n  readParser = (e: any) => {\n    try {\n      let data = JSON.parse(e.target.result);\n      this.lastReadFile = { status: \"success\", data: data };\n    } catch(e) {\n      return {\n        status: \"error\",\n        error: {\n          code: 504,\n          message: \"Parsing error.\"\n        }\n      };\n    }\n  }\n\n  fetchData = async (): Promise<JSON> => {\n    if(typeof this.lastReadFile !== \"undefined\") {\n      let d = this.lastReadFile;\n      this.lastReadFile = undefined;\n\n      return d;\n    } else {\n      await this.sleep(300);\n      return this.fetchData();\n    }\n  }\n\n  isGeo3D = (d: any) => {\n    if(typeof d.coordinates !== \"undefined\" && typeof d.id !== \"undefined\" && typeof d.objects !== \"undefined\" && typeof d.projectName !== \"undefined\" && typeof d.projectDescription !== \"undefined\") {\n      return {\n          \"status\": \"success\"\n      };\n    } else {\n      // unexpected format\n      return {\n          status: \"error\",\n          error: {\n            code: 505,\n            message: \"Unexpected format in the provided data.\"\n          }\n      };\n    }\n  }\n\n  isLevels = (d: any) => {\n    if(typeof d.features !== \"undefined\" && typeof d.features[0] !== \"undefined\") {\n      if(typeof d.features[0].properties !== \"undefined\") {\n        if(typeof d.features[0].properties.LEVEL_ID !== \"undefined\") {\n          return {\n            status: \"success\"\n          };\n        } else {\n          // not a levels file\n          return {\n            status: \"error\",\n            error: {\n              code: 506,\n              message: \"Levels file's {features} array must contain {LEVEL_ID} in it's {properties}.\"\n            }\n          };\n        }\n      } else {\n        // unexpected geojson data\n        return {\n          status: \"error\",\n          error: {\n            code: 507,\n            message: \"File is formatted in a bad shape.\"\n          }\n        };\n      }\n    } else {\n      // unexpected format\n      return {\n        status: \"error\",\n        error: {\n          code: 508,\n          message: \"Unexpected format in the provided data.\"\n        }\n      };\n    }\n  }\n\n  isVenue = (d: any) => {\n    if(typeof d.features !== \"undefined\" && typeof d.features[0] !== \"undefined\") {\n      if(typeof d.features[0].properties !== \"undefined\") {\n        if(typeof d.features[0].properties.DISPLAY_XY !== \"undefined\" && typeof d.features[0].properties.DISPLAY_XY.coordinates !== \"undefined\") {\n          return {\n            status: \"success\"\n          };\n        } else {\n          // not a venue file\n          return {\n            status: \"error\",\n            error: {\n              code: 506,\n              message: \"Venue file's {features} array must contain {DISPLAY_XY} in it's {properties}.\"\n            }\n          };\n        }\n      } else {\n        // unexpected geojson data\n        return {\n          status: \"error\",\n          error: {\n            code: 507,\n            message: \"File is formatted in a bad shape.\"\n          }\n        };\n      }\n    } else {\n      // unexpected format\n      return {\n        status: \"error\",\n        error: {\n          code: 508,\n          message: \"Unexpected format in the provided data.\"\n        }\n      };\n    }\n  }\n\n  saveProjectLocal = (projectData: any) => {\n    let filename = `${projectData.projectName}.geo3d`;\n\n    let file = new File([JSON.stringify(projectData, null, 2)], `${filename}`, {type: \"text/plain;charset=utf-8\"});\n\n    if (window.navigator.msSaveOrOpenBlob)\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    else {\n      let a = document.createElement(\"a\"),\n          url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(() => {\n          document.body.removeChild(a);\n          window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n}\n","export default class IdService {\n  guid = (): string => {\n    let s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    };\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n}\n","import FileError from './FileError';\nimport type { ErrorData } from './../types/Error';\n\nexport default class ErrorHandler {\n\n  handleError = (error: ErrorData) => {\n    let { message, code } = error;\n\n    if(code >= 500 && code < 600) {\n      // file errors\n      throw new FileError(message, code);\n    } else {\n      throw new Error(\"Unexpected error.\");\n    }\n  }\n\n}\n","import React from 'react';\nimport Editor from './lib/Editor';\n\nconst App = () => <Editor />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}