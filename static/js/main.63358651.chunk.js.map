{"version":3,"sources":["lib/components/Layout.js","lib/services/VectorGenerator.js","lib/graphics/Renderer.js","lib/graphics/Builder.js","lib/errors/FileError.js","lib/Editor.js","mixin.js","lib/services/FileService.js","lib/services/IdService.js","lib/errors/ErrorHandler.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","react_default","a","createElement","className","style","flexDirection","children","VectorGenerator","_this","this","scaler","arguments","length","undefined","coords","Object","classCallCheck","latLonToXY","mapWidth","mapHeight","generateVector","y","coordinates","x","xOffset","z","zOffset","v","OrbitControls","require","THREE","Builder","loadProject","project","assign","objects","map","i","setOffsets","lat","lon","forEach","processData","object","data","features","type3d","add3DPolygon","id","settings","initBuilder","container","scene","camera","getBoundingClientRect","width","height","renderer","antialias","shadowMap","enabled","setSize","appendChild","domElement","window","addEventListener","aspect","offsetWidth","updateProjectionMatrix","controls","maxPolarAngle","minDistance","maxDistance","addSkybox","viewLoop","requestAnimationFrame","update","render","geometry","material","side","color","cube","add","vectorGenerator","position","set","lookAt","addGround","parseInt","sidesMaterial","sideColor","shape","startCoords","moveTo","j","k","slice","q","scaledVector","lineTo","extrude","item","rotation","Math","PI","setY","depth","find","textureLoader","mapImage","concat","load","anisotropy","capabilities","getMaxAnisotropy","minFilter","ground","FileError","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","Error","captureStackTrace","assertThisInitialized","Editor","componentWillMount","projectName","projectDescription","setState","menu","activeLevel","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","stop","createProject","projectId","guid","state","objectSpread","changeMenu","offsetCoords","properties","DISPLAY_XY","openProject","projectData","lastMenu","renderMenu","startMenu","newModel1","manualGeoJSON","projectMenu","addOne","renderLevels","keys","projectLevels","key","_callee2","_context2","refs","getGeo3D","_callee3","e","res","_context3","readFile","sent","status","handleError","error","getGeoJSON","_callee4","_context4","push","name","level","Config","extrudeSettings","defaultColor","console","log","getVenue","_callee5","isVenue","_context5","validateManualData","type","value","JSON","parse","onClick","htmlFor","accept","onChange","target","rows","ref","validateEntered","location","reload","components_Layout","levels","sort","b","baseClass","mixins","base","_baseClass","_len2","_key2","mixin","copyProps","inherits","source","getOwnPropertyNames","getOwnPropertySymbols","prop","match","defineProperty","getOwnPropertyDescriptor","prototype","Mixin","Component","FileService","sleep","ms","Promise","resolve","setTimeout","_ref","asyncToGenerator","mark","ext","file","fileExtArr","fileExt","result","files","exec","reader","readAsText","fetchData","abrupt","code","message","_x","_x2","readParser","lastReadFile","d","isGeo3D","saveProjectLocal","filename","File","stringify","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","click","removeChild","revokeObjectURL","FileReader","onload","s4","floor","random","toString","substring","App","Editor_Editor","Boolean","hostname","ReactDOM","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63358651.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Layout = (props: any) => (\r\n    <div className=\"layout\" style={{flexDirection: props.flexDirection || \"row\"}}>\r\n        {\r\n            props.children\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default Layout;\r\n","import type { ScaledVector } from './../types/ScaledVector';\r\n\r\nexport class VectorGenerator {\r\n    mapWidth: number;\r\n    mapHeight: number;\r\n    scaler: number;\r\n\r\n    xOffset: number;\r\n    zOffset: number;\r\n\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    constructor(scaler: number = 360/0.011, coords: number[]){\r\n        this.mapWidth = 1280;\r\n        this.mapHeight = 1280;\r\n\r\n        let v = this.latLonToXY(coords);\r\n\r\n        this.scaler = scaler * this.mapWidth/360;\r\n\r\n        this.xOffset = v[0]*this.scaler;\r\n        this.zOffset = v[1]*this.scaler;\r\n    }\r\n\r\n    latLonToXY = (coords: number[]): number[] => {\r\n        return [\r\n            ((this.mapWidth/360) * (180 + coords[0])),\r\n            ((this.mapHeight/360) * (90 - coords[1]))\r\n        ];\r\n    }\r\n\r\n    generateVector = (coords: number[], y: number = 2): ScaledVector => {\r\n        let coordinates = this.latLonToXY(coords);\r\n        return {\r\n            x: coordinates[0]*this.scaler - this.xOffset,\r\n            y: y,\r\n            z: coordinates[1]*this.scaler - this.zOffset\r\n        };\r\n    }\r\n}\r\n","import * as THREE from \"three\";\r\nimport { Scene, PerspectiveCamera, WebGLRenderer } from 'three';\r\nimport { VectorGenerator } from './../services/VectorGenerator';\r\nimport type { ScaledVector } from './../types/ScaledVector';\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\nexport default class Renderer {\r\n\r\n  scene: Scene;\r\n  camera: PerspectiveCamera;\r\n  renderer: WebGLRenderer;\r\n  controls: CameraControls;\r\n  vectorGenerator: VectorGenerator;\r\n  container: HTMLDivElement;\r\n  project: any;\r\n\r\n  initBuilder = (container: HTMLDivElement) => {\r\n    this.container = container;\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(90, this.container.getBoundingClientRect().width / this.container.getBoundingClientRect().height, 0.1, 10000);\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.renderer.setSize(this.container.getBoundingClientRect().width, this.container.getBoundingClientRect().height);\r\n    this.container.appendChild(this.renderer.domElement);\r\n\r\n    window.addEventListener('resize', () => {\r\n      this.renderer.setSize(this.container.getBoundingClientRect().width, this.container.getBoundingClientRect().height);\r\n      this.camera.aspect = this.container.offsetWidth / this.container.getBoundingClientRect().height;\r\n      this.camera.updateProjectionMatrix();\r\n    });\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.maxPolarAngle = 30;\r\n    this.controls.maxPolarAngle = 70;\r\n    this.controls.minDistance = 10;\r\n    this.controls.maxDistance = 2000;\r\n\r\n    this.addSkybox();\r\n    this.viewLoop();\r\n  }\r\n\r\n  viewLoop = () => {\r\n    requestAnimationFrame(this.viewLoop);\r\n    this.update();\r\n    this.render();\r\n  }\r\n\r\n  render = () => {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  update = () => {\r\n    // update view\r\n  }\r\n\r\n  addSkybox = () => {\r\n    let geometry = new THREE.BoxGeometry(10000, 10000, 10000);\r\n\r\n    let material: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial({\r\n        side: THREE.DoubleSide,\r\n        color: 0xdddddd\r\n    });\r\n\r\n    let cube = new THREE.Mesh(geometry, material);\r\n    this.scene.add(cube);\r\n  }\r\n\r\n  setOffsets = (coords: any) => {\r\n    this.project.coordinates = coords;\r\n\r\n    this.vectorGenerator = new VectorGenerator(undefined, coords);\r\n    this.camera.position.set(1000, 1000, 1000);\r\n    this.camera.lookAt(0, 0, 0);\r\n    this.addGround(coords);\r\n  }\r\n\r\n  addGround(coords: number[]) {\r\n    var geometry = new THREE.PlaneGeometry( 10000, 10000, 32 );\r\n    let textureLoader = new THREE.TextureLoader();\r\n\r\n    let mapImage = `https://api.mapbox.com/styles/v1/mapbox/streets-v10/static/${coords[0]},${coords[1]},15.0,0,0/1280x1280?access_token=pk.eyJ1IjoiY2FrbWFrZmF0aWgiLCJhIjoiY2pxcGk1d3ZrMDFwYjQ5bzFqNncyYjl2NyJ9.MtGJZ74Cu-6R7K52rFrNeQ`;\r\n\r\n    let map = textureLoader.load(mapImage);\r\n\r\n    map.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\r\n    map.minFilter = THREE.LinearFilter;\r\n\r\n    var material = new THREE.MeshBasicMaterial({map: map, side: THREE.DoubleSide});\r\n\r\n    let ground = new THREE.Mesh(geometry, material);\r\n    ground.rotation.x -= Math.PI/2;\r\n\r\n    this.scene.add(ground);\r\n  }\r\n\r\n  add3DPolygon = (i: any, id: string, settings: any) => {\r\n    let material = new THREE.MeshBasicMaterial({\r\n      color: parseInt(settings.material.color, 16)\r\n    });\r\n\r\n    let sidesMaterial = new THREE.MeshBasicMaterial({ color: parseInt(settings.material.sideColor, 16), side: THREE.DoubleSide });\r\n\r\n    let shape = new THREE.Shape();\r\n\r\n    let startCoords = this.vectorGenerator.generateVector(i.geometry.coordinates[0][0][0]);\r\n\r\n    shape.moveTo(startCoords.x, -startCoords.z);\r\n\r\n    i.geometry.coordinates.forEach((j: any) => {\r\n      j.forEach((k: any) => {\r\n        k.slice(1).forEach((q: any) => {\r\n            let scaledVector: ScaledVector = this.vectorGenerator.generateVector(q);\r\n            shape.lineTo(scaledVector.x, -scaledVector.z);\r\n        });\r\n      });\r\n    });\r\n\r\n    let geometry = new THREE.ExtrudeBufferGeometry(shape, settings.extrude);\r\n    let item = new THREE.Mesh(geometry, [material, sidesMaterial]);\r\n\r\n    item.rotation.x += -Math.PI / 2;\r\n    item.position.setY(settings.extrude.depth / 2);\r\n\r\n    this.project.objects.find((i: any) => i.id === id).item = item;\r\n\r\n    this.scene.add(item);\r\n  }\r\n\r\n}\r\n","import Renderer from './Renderer';\r\n\r\nexport default class Builder extends Renderer {\r\n\r\n  project: any;\r\n\r\n  loadProject = (project: any) => {\r\n    this.project = Object.assign({}, project, {objects: project.objects.map((i: any) => Object.assign({}, i))});\r\n\r\n    this.setOffsets([this.project.coordinates.lat, this.project.coordinates.lon]);\r\n\r\n    this.project.objects.forEach((i: any) => {\r\n      this.processData(i);\r\n    });\r\n  }\r\n\r\n  processData = (object: any) => {\r\n    object.data.features.forEach((i: any) => {\r\n      switch(object.type3d) {\r\n        case \"3D_POLYGON\":\r\n          this.add3DPolygon(i, object.id, object.settings);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default class FileError extends Error {\r\n\r\n  constructor(...args) {\r\n    super(...args);\r\n    Error.captureStackTrace(this, FileError);\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport type { EditorState } from './types/EditorState';\r\nimport Layout from './components/Layout';\r\nimport Builder from './graphics/Builder';\r\nimport FileService from './services/FileService';\r\nimport IdService from './services/IdService';\r\nimport Mixin from './../mixin';\r\n\r\nimport ErrorHandler from './errors/ErrorHandler';\r\n\r\n// to be able to demonstrate faster, will be removed when deployed\r\nimport ExampleData from './../sample_data/example.json';\r\n\r\n// default Config settings\r\nimport Config from './../config.json';\r\n\r\nclass ReactComponent extends Component<{}, EditorState>{}\r\n\r\nexport default class Editor extends Mixin(ReactComponent, FileService, IdService, Builder, ErrorHandler) {\r\n\r\n  builder: Builder;\r\n  lastMenu: string;\r\n  project: any;\r\n\r\n  componentWillMount = () => {\r\n    this.project = {};\r\n\r\n    this.project.projectName = \"\";\r\n    this.project.projectDescription = \"\";\r\n\r\n    this.setState({\r\n      menu: \"START\",\r\n      activeLevel: 0,\r\n      objects: []\r\n    });\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    // to be able to demonstrate faster,this part will be removed on publish\r\n    // this.changeMenu(\"PROJECT_MENU\");\r\n    // this.openProject(ExampleData);\r\n  }\r\n\r\n  createProject = () => {\r\n    let projectId = this.guid();\r\n    let { objects } = this.state;\r\n\r\n    this.project = {\r\n      ...this.project,\r\n      id: projectId\r\n    };\r\n\r\n    if(objects.length > 0 && this.project.projectName.length > 0) {\r\n      this.changeMenu(\"PROJECT_MENU\");\r\n\r\n      let offsetCoords = objects.find(i => i.type3d === \"3D_POLYGON\").data.features.find((i: any) => typeof i.properties.DISPLAY_XY !== \"undefined\").properties.DISPLAY_XY.coordinates;\r\n\r\n      this.project.coordinates = {lat: offsetCoords[0], lon: offsetCoords[1]};\r\n\r\n      this.openProject(this.projectData);\r\n    } else {\r\n      throw new Error(\"You can't create a project without providing a valid venue data and a name.\");\r\n    }\r\n  }\r\n\r\n  changeMenu = (menu: string) => {\r\n    this.lastMenu = this.state.menu;\r\n\r\n    this.setState({\r\n      menu\r\n    });\r\n  }\r\n\r\n  renderMenu = () => {\r\n    let { menu } = this.state;\r\n\r\n    switch(menu) {\r\n      case \"START\":\r\n        return this.startMenu();\r\n      case \"NEW_MODEL_1\":\r\n        return this.newModel1();\r\n      case \"MANUAL_GEOJSON\":\r\n        return this.manualGeoJSON();\r\n      case \"PROJECT_MENU\":\r\n        return this.projectMenu();\r\n      case \"ADD_ONE\":\r\n        return this.addOne();\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  get projectData() {\r\n    return {...this.project, objects: this.state.objects};\r\n  }\r\n\r\n  get projectLevels() {\r\n    let levels = {};\r\n\r\n    this.state.objects.sort((a, b) => a.level > b.level ? 1 : -1).forEach(i => levels[i.level] = true);\r\n\r\n    return levels;\r\n  }\r\n\r\n  renderLevels = () => {\r\n    let { activeLevel } = this.state;\r\n    return (\r\n      <section className=\"levels\">\r\n        {Object.keys(this.projectLevels).map((i) => <div className={activeLevel === parseInt(i, 10) ? 'active' : ''} key={i}>{i}</div>)}\r\n      </section>\r\n    );\r\n  }\r\n\r\n  openProject = async (data: any) => {\r\n    let {\r\n      projectName,\r\n      projectDescription,\r\n      id,\r\n      objects,\r\n      coordinates\r\n    } = data;\r\n\r\n    await this.setState({\r\n      objects\r\n    });\r\n\r\n    this.project = { projectName, projectDescription, coordinates, id };\r\n\r\n    this.initBuilder(this.refs[\"3d-view-container\"]);\r\n    this.loadProject(this.projectData);\r\n  }\r\n\r\n  getGeo3D = async (e: any) => {\r\n    let { objects } = this.state;\r\n\r\n    if(!(objects.length === 0)) {\r\n      this.setState({\r\n        objects: []\r\n      });\r\n    }\r\n\r\n    let res = await this.readFile(e, \"geo3d\");\r\n\r\n    if(res.status === \"error\") {\r\n      this.handleError(res.error);\r\n    } else {\r\n      this.openProject(res.data);\r\n    }\r\n  }\r\n\r\n  getGeoJSON = async (e: any) => {\r\n    let { objects } = this.state;\r\n    let res = await this.readFile(e, \"geojson\");\r\n\r\n    if(res.status === \"error\") {\r\n      this.handleError(res.error);\r\n    } else {\r\n      let id = this.guid();\r\n\r\n      objects.push( {data: res.data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, level: 0, settings: { extrude: Config.extrudeSettings, material: { sideColor: Config.sideColor, color: Config.defaultColor} } });\r\n\r\n      console.log(objects);\r\n    }\r\n  }\r\n\r\n  getVenue = async (e: any) => {\r\n    let { objects } = this.state;\r\n\r\n    if(!(objects.length === 0)) {\r\n      await this.setState({\r\n        objects: []\r\n      });\r\n    }\r\n\r\n    let res = await this.readFile(e, \"geojson\");\r\n\r\n    if(res.status === \"success\") {\r\n      let isVenue = this.isVenue(res.data);\r\n\r\n      if(isVenue.status === \"success\") {\r\n        let id = this.guid();\r\n\r\n        objects.push({data: res.data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, level: 0, settings: {extrude: Config.extrudeSettings, material: {sideColor: Config.sideColor, color: Config.defaultColor}} });\r\n      } else {\r\n        throw new Error(isVenue.error);\r\n      }\r\n    } else {\r\n      throw new Error(res.error);\r\n    }\r\n  }\r\n\r\n  validateManualData = (type: \"ANY\") => {\r\n    // needs to be editted due to edit project after creation\r\n    let { objects } = this.state;\r\n    let { value } = (this.refs[\"manual-geojson\"]);\r\n\r\n    try {\r\n      let data = JSON.parse(value);\r\n      let isVenue = this.isVenue(data);\r\n\r\n      if(isVenue.status === \"success\") {\r\n        let id = this.guid();\r\n\r\n        objects.push({data, type3d: \"3D_POLYGON\", name: \"VENUE\", id, level: 0,settings: {extrude: Config.extrudeSettings, material: {sideColor: Config.sideColor, color: Config.defaultColor}}});\r\n\r\n        this.setState({\r\n          menu: \"NEW_MODEL_1\",\r\n          objects\r\n        });\r\n      } else {\r\n        this.handleError(isVenue.error);\r\n      }\r\n    } catch(e) {\r\n      this.handleError(e);\r\n    }\r\n  }\r\n\r\n  startMenu = () => (\r\n    <aside className=\"aside\">\r\n      <section className=\"aside-top\">\r\n        <div className=\"form-group\">\r\n          <button className=\"btn-default btn-bordered\" onClick={() => this.changeMenu(\"NEW_MODEL_1\")}>\r\n            <i className=\"fas fa-plus\"></i>\r\n            NEW\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"up-v\" className=\"btn-default btn-bordered\">\r\n              <i className=\"far fa-folder-open\"></i>\r\n              OPEN\r\n          </label>\r\n          <input type=\"file\" accept=\".geo3d\" id=\"up-v\" className=\"upload-default\" onChange={this.getGeo3D} />\r\n        </div>\r\n      </section>\r\n    </aside>\r\n  )\r\n\r\n  newModel1 = () => (\r\n    <aside className=\"aside\">\r\n      <section className=\"aside-top\">\r\n        <div className=\"btn-back\" onClick={() => {\r\n          this.project.projectName = \"\";\r\n          this.project.projectDescription = \"\";\r\n          this.setState({\r\n            menu: \"START\",\r\n            objects: []\r\n          });\r\n        }}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n          <span>BACK</span>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\" className=\"label-default\">Project Name (*)</label>\r\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.project.projectName = e.target.value} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\" className=\"label-default\">Project Description</label>\r\n          <textarea rows={5} className=\"inp-default\" onChange={(e) => this.project.projectDescription = e.target.value} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"up-v\" className=\"btn-default\">\r\n            <i className=\"fas fa-folder-open\"></i>\r\n            Venue GeoJSON\r\n          </label>\r\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.getVenue} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\r\n        </div>\r\n      </section>\r\n      <button className=\"btn-default btn-bordered\" onClick={() => this.createProject()}>\r\n          NEXT\r\n      </button>\r\n    </aside>\r\n  )\r\n\r\n  manualGeoJSON = () => (\r\n    <aside className=\"aside\">\r\n      <section className=\"aside-top\">\r\n        <div className=\"btn-back\" onClick={() => this.setState({menu: \"NEW_MODEL_1\"})}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n          <span>BACK</span>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\" className=\"label-default\">Venue GeoJSON</label>\r\n          <textarea rows={12} className=\"inp-default\" ref=\"manual-geojson\" />\r\n        </div>\r\n      </section>\r\n      <button className=\"btn-default\" onClick={this.validateEntered}>\r\n        SAVE\r\n      </button>\r\n    </aside>\r\n  )\r\n\r\n  projectMenu = () => (\r\n    <aside className=\"aside\">\r\n      <section className=\"aside-top\">\r\n        <div className=\"form-group\">\r\n          <button className=\"btn-default\" onClick={() => this.changeMenu(\"ADD_ONE\")}>\r\n            <i className=\"fas fa-plus\"></i>\r\n            ADD\r\n          </button>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn-default\">\r\n            <i className=\"fas fa-pen\"></i>\r\n            EDIT\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <button className=\"btn-default\" onClick={() => window.location.reload()}>\r\n        QUIT\r\n      </button>\r\n    </aside>\r\n  )\r\n\r\n  addOne = () => (\r\n    <aside className=\"aside\">\r\n      <section className=\"aside-top\">\r\n        <div className=\"btn-back\" onClick={() => this.setState({\r\n            menu: this.lastMenu\r\n        })}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n          <span>BACK</span>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\" className=\"label-default\">Name (*)</label>\r\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.project.projectName = e.target.value} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\" className=\"label-default\">Level (*)</label>\r\n          <input type=\"text\" className=\"inp-default\" onChange={(e) => this.project.projectName = e.target.value} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\" className=\"label-default\">Type (*)</label>\r\n          <select className=\"inp-default\">\r\n            <option value=\"\">WALL</option>\r\n            <option value=\"\">LEVELS</option>\r\n            <option value=\"\">GROUND</option>\r\n            <option value=\"\">OBJECT</option>\r\n            <option value=\"\">LINE</option>\r\n            <option value=\"\">PATH</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"up-v\" className=\"btn-default\">\r\n            <i className=\"fas fa-upload\"></i>\r\n            GeoJSON\r\n          </label>\r\n          <input type=\"file\" accept=\".geojson\" id=\"up-v\" className=\"upload-default\" onChange={this.getGeoJSON} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <span className=\"link-span\" onClick={() => this.setState({menu: \"MANUAL_GEOJSON\"})}>Alternatively, you can manually enter GeoJSON data</span>\r\n        </div>\r\n      </section>\r\n      <button className=\"btn-default btn-bordered\" onClick={() => this.createProject()}>\r\n        <i className=\"fas fa-plus\"></i>\r\n        ADD\r\n      </button>\r\n    </aside>\r\n  )\r\n\r\n  render = () => (\r\n    <Layout flexDirection=\"row\">\r\n      {this.renderMenu()}\r\n      {this.renderLevels()}\r\n      <div ref=\"3d-view-container\" id=\"geo3d-view-container\" />\r\n    </Layout>\r\n  )\r\n\r\n}\r\n","/* eslint-disable */\r\n\r\nexport default (baseClass, ...mixins) => {\r\n  class base extends baseClass {\r\n      constructor (...args) {\r\n          super(...args);\r\n          mixins.forEach((mixin) => {\r\n              copyProps(this, new mixin());\r\n          });\r\n      }\r\n  }\r\n  let copyProps = (target, source) => {\r\n      Object.getOwnPropertyNames(source)\r\n      .concat(Object.getOwnPropertySymbols(source))\r\n      .forEach((prop) => {\r\n         if (!prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/))\r\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\r\n       });\r\n  }\r\n  mixins.forEach((mixin) => {\r\n      copyProps(base.prototype, mixin.prototype);\r\n      copyProps(base, mixin);\r\n  });\r\n  return base;\r\n}\r\n","export default class FileService {\r\n\r\n  reader: FileReader;\r\n  lastReadFile: any;\r\n\r\n  constructor() {\r\n    this.reader = new FileReader();\r\n    this.reader.onload = this.readParser;\r\n  }\r\n\r\n  sleep = (ms: number): Promise<Function> => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  readFile = async (e: any, ext: string): any => {\r\n    if(e.target.files.length === 1) {\r\n      let file = e.target.files[0];\r\n      let fileExtArr = (/[.]/.exec(file.name)) ? /[^.]+$/.exec(file.name) : undefined;\r\n\r\n      if(typeof fileExtArr !== \"undefined\") {\r\n        let fileExt = fileExtArr[0];\r\n\r\n        if(fileExt === ext || fileExt === \"json\") {\r\n          this.reader.readAsText(file);\r\n          let result: any = await this.fetchData();\r\n\r\n          return result;\r\n        } else {\r\n          // unexpected file type\r\n          return {\r\n            status: \"error\",\r\n            error: {\r\n              code: 501,\r\n              message: \"Unexpected file type.\"\r\n            }\r\n          };\r\n        }\r\n      } else {\r\n        // unexpected error\r\n        return {\r\n          status: \"error\",\r\n          error: {\r\n            code: 502,\r\n            message: \"Unexpected error.\"\r\n          }\r\n        };\r\n      }\r\n    } else {\r\n      // more than 1 file\r\n      return {\r\n        status: \"error\",\r\n        error: {\r\n          code: 503,\r\n          message: \"Unexpected file type.\"\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  readParser = (e: any) => {\r\n    try {\r\n      let data = JSON.parse(e.target.result);\r\n      this.lastReadFile = { status: \"success\", data: data };\r\n    } catch(e) {\r\n      return {\r\n        status: \"error\",\r\n        error: {\r\n          code: 504,\r\n          message: \"Parsing error.\"\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  fetchData = async (): Promise<JSON> => {\r\n    if(typeof this.lastReadFile !== \"undefined\") {\r\n      let d = this.lastReadFile;\r\n      this.lastReadFile = undefined;\r\n\r\n      return d;\r\n    } else {\r\n      await this.sleep(300);\r\n      return this.fetchData();\r\n    }\r\n  }\r\n\r\n  isGeo3D = (d: any) => {\r\n    if(typeof d.coordinates !== \"undefined\" && typeof d.id !== \"undefined\" && typeof d.objects !== \"undefined\" && typeof d.projectName !== \"undefined\" && typeof d.projectDescription !== \"undefined\") {\r\n      return {\r\n          \"status\": \"success\"\r\n      };\r\n    } else {\r\n      // unexpected format\r\n      return {\r\n          status: \"error\",\r\n          error: {\r\n            code: 505,\r\n            message: \"Unexpected format in the provided data.\"\r\n          }\r\n      };\r\n    }\r\n  }\r\n\r\n  isVenue = (d: any) => {\r\n    if(typeof d.features !== \"undefined\" && typeof d.features[0] !== \"undefined\") {\r\n      if(typeof d.features[0].properties !== \"undefined\") {\r\n        if(typeof d.features[0].properties.DISPLAY_XY !== \"undefined\" && typeof d.features[0].properties.DISPLAY_XY.coordinates !== \"undefined\") {\r\n          return {\r\n            status: \"success\"\r\n          };\r\n        } else {\r\n          // not a venue file\r\n          return {\r\n            status: \"error\",\r\n            error: {\r\n              code: 506,\r\n              message: \"Venue file's {features} array must contain {DISPLAY_XY} in it's {properties}.\"\r\n            }\r\n          };\r\n        }\r\n      } else {\r\n        // unexpected geojson data\r\n        return {\r\n          status: \"error\",\r\n          error: {\r\n            code: 507,\r\n            message: \"File is formatted in a bad shape.\"\r\n          }\r\n        };\r\n      }\r\n    } else {\r\n      // unexpected format\r\n      return {\r\n        status: \"error\",\r\n        error: {\r\n          code: 508,\r\n          message: \"Unexpected format in the provided data.\"\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  saveProjectLocal = (projectData: any) => {\r\n    let filename = `${projectData.projectName}.geo3d`;\r\n\r\n    let file = new File([JSON.stringify(projectData, null, 2)], `${filename}`, {type: \"text/plain;charset=utf-8\"});\r\n\r\n    if (window.navigator.msSaveOrOpenBlob)\r\n      window.navigator.msSaveOrOpenBlob(file, filename);\r\n    else {\r\n      let a = document.createElement(\"a\"),\r\n          url = URL.createObjectURL(file);\r\n      a.href = url;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      setTimeout(() => {\r\n          document.body.removeChild(a);\r\n          window.URL.revokeObjectURL(url);\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n","export default class IdService {\r\n  guid = (): string => {\r\n    let s4 = () => {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n    };\r\n\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n}\r\n","import FileError from './FileError';\r\nimport type { ErrorData } from './../types/Error';\r\n\r\nexport default class ErrorHandler {\r\n\r\n  handleError = (error: ErrorData) => {\r\n    let { message, code } = error;\r\n\r\n    if(code >= 500 && code < 600) {\r\n      // file errors\r\n      throw new FileError(message, code);\r\n    } else {\r\n      throw new Error(\"Unexpected error.\");\r\n    }\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport Editor from './lib/Editor';\n\nconst App = () => <Editor />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}